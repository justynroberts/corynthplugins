{
  "version": "1.0.0",
  "updated": "2025-08-20T12:00:00Z",
  "repository": "https://github.com/justynroberts/corynthplugins",
  "note": "All plugins listed below are available as built-in lazy-loaded plugins in Corynth >= 1.2.0. No installation required.",
  "plugins": [
    {
      "name": "redis",
      "version": "1.0.0",
      "description": "Redis cache operations and key-value storage",
      "author": "Corynth Team",
      "format": "built-in",
      "installation": "Automatically lazy-loaded when first used",
      "tags": ["redis", "cache", "key-value", "database"],
      "actions": [
        {"name": "set", "description": "Set a key-value pair in Redis", "example": "SET mykey myvalue"},
        {"name": "get", "description": "Get a value from Redis by key", "example": "GET mykey"},
        {"name": "delete", "description": "Delete a key from Redis", "example": "DEL mykey"},
        {"name": "list", "description": "List keys matching a pattern", "example": "KEYS user:*"}
      ],
      "requirements": {"corynth": ">=1.2.0"}
    },
    {
      "name": "mysql",
      "version": "1.0.0",
      "description": "MySQL database operations and management",
      "author": "Corynth Team",
      "format": "built-in",
      "installation": "Automatically lazy-loaded when first used",
      "tags": ["mysql", "database", "sql", "rdbms", "mariadb"],
      "actions": [
        {"name": "query", "description": "Execute SQL query", "example": "SELECT * FROM users"},
        {"name": "execute", "description": "Execute INSERT/UPDATE/DELETE", "example": "INSERT INTO users VALUES (...)"},
        {"name": "backup", "description": "Create database backup using mysqldump", "example": "Backup database"}
      ],
      "requirements": {"corynth": ">=1.2.0"}
    },
    {
      "name": "terraform",
      "version": "1.0.0",
      "description": "Terraform Infrastructure as Code operations",
      "author": "Corynth Team",
      "format": "built-in",
      "installation": "Automatically lazy-loaded when first used",
      "tags": ["terraform", "iac", "infrastructure", "cloud", "provisioning"],
      "actions": [
        {"name": "init", "description": "Initialize Terraform working directory", "example": "terraform init"},
        {"name": "plan", "description": "Create Terraform execution plan", "example": "terraform plan"},
        {"name": "apply", "description": "Apply Terraform configuration", "example": "terraform apply"},
        {"name": "destroy", "description": "Destroy Terraform-managed infrastructure", "example": "terraform destroy"}
      ],
      "requirements": {"corynth": ">=1.2.0"}
    },
    {
      "name": "vault",
      "version": "1.0.0",
      "description": "HashiCorp Vault secrets management and encryption",
      "author": "Corynth Team",
      "format": "built-in",
      "installation": "Automatically lazy-loaded when first used",
      "tags": ["vault", "secrets", "security", "encryption", "hashicorp"],
      "actions": [
        {"name": "read", "description": "Read secret from Vault", "example": "vault kv get secret/myapp"},
        {"name": "write", "description": "Write secret to Vault", "example": "vault kv put secret/myapp password=123"},
        {"name": "delete", "description": "Delete secret from Vault", "example": "vault kv delete secret/myapp"},
        {"name": "list", "description": "List secrets at a given path", "example": "vault kv list secret/"}
      ],
      "requirements": {"corynth": ">=1.2.0"}
    },
    {
      "name": "docker",
      "version": "1.0.0",
      "description": "Docker container operations and image management",
      "author": "Corynth Team",
      "format": "built-in",
      "installation": "Automatically lazy-loaded when first used",
      "tags": ["docker", "containers", "containerization", "devops"],
      "actions": [
        {"name": "run", "description": "Run Docker container", "example": "docker run nginx"},
        {"name": "build", "description": "Build Docker image", "example": "docker build -t myapp ."},
        {"name": "ps", "description": "List Docker containers", "example": "docker ps"},
        {"name": "stop", "description": "Stop Docker container", "example": "docker stop container_id"}
      ],
      "requirements": {"corynth": ">=1.2.0"}
    },
    {
      "name": "http",
      "version": "1.0.0",
      "description": "HTTP requests with timeout and header support",
      "author": "Corynth Team",
      "format": "built-in",
      "installation": "Automatically lazy-loaded when first used",
      "tags": ["http", "api", "rest", "web", "client"],
      "actions": [
        {"name": "get", "description": "Make HTTP GET requests", "example": "GET https://api.example.com/users"},
        {"name": "post", "description": "Make HTTP POST requests", "example": "POST JSON data"},
        {"name": "put", "description": "Make HTTP PUT requests", "example": "PUT update data"},
        {"name": "delete", "description": "Make HTTP DELETE requests", "example": "DELETE resource"}
      ],
      "requirements": {"corynth": ">=1.2.0"}
    },
    {
      "name": "shell",
      "version": "1.0.0",
      "description": "Execute shell commands and scripts",
      "author": "Corynth Team",
      "format": "built-in",
      "installation": "Automatically lazy-loaded when first used",
      "tags": ["shell", "command", "script", "execution"],
      "actions": [
        {"name": "exec", "description": "Execute shell command", "example": "ls -la"},
        {"name": "script", "description": "Execute shell script", "example": "Run bash script"}
      ],
      "requirements": {"corynth": ">=1.2.0"}
    },
    {
      "name": "file",
      "version": "1.0.0",
      "description": "File and directory operations",
      "author": "Corynth Team",
      "format": "built-in", 
      "installation": "Automatically lazy-loaded when first used",
      "tags": ["file", "directory", "filesystem", "io"],
      "actions": [
        {"name": "read", "description": "Read file contents", "example": "Read text file"},
        {"name": "write", "description": "Write file contents", "example": "Write to file"},
        {"name": "copy", "description": "Copy files or directories", "example": "Copy file.txt to backup.txt"},
        {"name": "move", "description": "Move or rename files", "example": "Move file to new location"}
      ],
      "requirements": {"corynth": ">=1.2.0"}
    },
    {
      "name": "git",
      "version": "1.0.0",
      "description": "Git version control operations",
      "author": "Corynth Team",
      "format": "built-in",
      "installation": "Always available (core plugin)",
      "tags": ["git", "version-control", "repository", "scm"],
      "actions": [
        {"name": "clone", "description": "Clone a Git repository", "example": "git clone https://github.com/user/repo.git"},
        {"name": "status", "description": "Check repository status", "example": "git status"},
        {"name": "commit", "description": "Commit changes", "example": "git commit -m 'message'"},
        {"name": "push", "description": "Push changes to remote", "example": "git push origin main"}
      ],
      "requirements": {"corynth": ">=1.0.0"}
    },
    {
      "name": "slack",
      "version": "1.0.0",
      "description": "Slack workspace messaging and management",
      "author": "Corynth Team",
      "format": "built-in",
      "installation": "Always available (core plugin)",
      "tags": ["slack", "messaging", "notification", "communication"],
      "actions": [
        {"name": "send", "description": "Send messages to Slack", "example": "Send to #general"},
        {"name": "channels", "description": "List workspace channels", "example": "Get all channels"}
      ],
      "requirements": {"corynth": ">=1.0.0"}
    },
    {
      "name": "kubernetes",
      "version": "1.0.0",
      "description": "Kubernetes cluster management and resource operations",
      "author": "Corynth Team",
      "format": "built-in",
      "installation": "Automatically lazy-loaded when first used",
      "tags": ["kubernetes", "k8s", "container", "orchestration", "cloud-native"],
      "actions": [
        {"name": "apply", "description": "Apply Kubernetes manifests", "example": "kubectl apply -f deployment.yaml"},
        {"name": "get", "description": "Get Kubernetes resources", "example": "kubectl get pods"},
        {"name": "delete", "description": "Delete Kubernetes resources", "example": "kubectl delete deployment"},
        {"name": "scale", "description": "Scale deployments", "example": "kubectl scale deployment --replicas=3"},
        {"name": "logs", "description": "Get pod logs", "example": "kubectl logs pod-name"},
        {"name": "wait", "description": "Wait for resource condition", "example": "kubectl wait --for=condition=available"}
      ],
      "requirements": {"corynth": ">=1.2.0"}
    },
    {
      "name": "helm",
      "version": "1.0.0",
      "description": "Helm package manager for Kubernetes applications",
      "author": "Corynth Team",
      "format": "built-in",
      "installation": "Automatically lazy-loaded when first used",
      "tags": ["helm", "kubernetes", "package-manager", "charts", "cloud-native"],
      "actions": [
        {"name": "install", "description": "Install Helm chart", "example": "helm install release-name chart"},
        {"name": "upgrade", "description": "Upgrade Helm release", "example": "helm upgrade release-name chart"},
        {"name": "uninstall", "description": "Uninstall Helm release", "example": "helm uninstall release-name"},
        {"name": "list", "description": "List Helm releases", "example": "helm list"},
        {"name": "status", "description": "Get release status", "example": "helm status release-name"},
        {"name": "template", "description": "Render chart templates", "example": "helm template release-name chart"},
        {"name": "repo_add", "description": "Add Helm repository", "example": "helm repo add bitnami https://..."},
        {"name": "repo_update", "description": "Update repository indexes", "example": "helm repo update"}
      ],
      "requirements": {"corynth": ">=1.2.0"}
    },
    {
      "name": "aws",
      "version": "1.0.0",
      "description": "Amazon Web Services cloud operations and resource management",
      "author": "Corynth Team",
      "format": "built-in",
      "installation": "Automatically lazy-loaded when first used",
      "tags": ["aws", "cloud", "ec2", "s3", "lambda", "vpc", "iam", "cloud-native"],
      "actions": [
        {"name": "ec2_list", "description": "List EC2 instances", "example": "List running instances"},
        {"name": "ec2_create", "description": "Create EC2 instance", "example": "Launch new instance"},
        {"name": "ec2_terminate", "description": "Terminate EC2 instances", "example": "Terminate instance"},
        {"name": "s3_list", "description": "List S3 buckets or objects", "example": "List buckets"},
        {"name": "s3_upload", "description": "Upload file to S3", "example": "Upload to bucket"},
        {"name": "s3_download", "description": "Download file from S3", "example": "Download from bucket"},
        {"name": "lambda_invoke", "description": "Invoke Lambda function", "example": "Invoke function"},
        {"name": "lambda_list", "description": "List Lambda functions", "example": "List all functions"},
        {"name": "iam_list_users", "description": "List IAM users", "example": "List all users"},
        {"name": "vpc_list", "description": "List VPCs", "example": "List all VPCs"}
      ],
      "requirements": {"corynth": ">=1.2.0"}
    },
    {
      "name": "calculator",
      "version": "1.0.0",
      "description": "Mathematical calculations and unit conversions",
      "author": "Corynth Team",
      "format": "built-in",
      "installation": "Automatically lazy-loaded when first used",
      "tags": ["math", "calculation", "utility", "converter"],
      "actions": [
        {"name": "calculate", "description": "Perform mathematical calculations", "example": "15 + 25"},
        {"name": "convert", "description": "Convert between units", "example": "Convert celsius to fahrenheit"}
      ],
      "requirements": {"corynth": ">=1.2.0"}
    },
    {
      "name": "gcp",
      "version": "1.0.0",
      "description": "Google Cloud Platform operations and resource management",
      "author": "Corynth Team",
      "format": "built-in",
      "installation": "Automatically lazy-loaded when first used",
      "tags": ["gcp", "google-cloud", "gce", "gke", "gcs", "cloud-functions", "cloud-native"],
      "actions": [
        {"name": "compute_list", "description": "List Compute Engine instances", "example": "List VMs"},
        {"name": "compute_create", "description": "Create Compute Engine instance", "example": "Launch VM"},
        {"name": "compute_delete", "description": "Delete Compute Engine instances", "example": "Delete VMs"},
        {"name": "gke_list", "description": "List GKE clusters", "example": "List clusters"},
        {"name": "gke_get_credentials", "description": "Get GKE cluster credentials", "example": "Get kubeconfig"},
        {"name": "storage_list", "description": "List Cloud Storage buckets or objects", "example": "List buckets"},
        {"name": "storage_upload", "description": "Upload file to Cloud Storage", "example": "Upload to GCS"},
        {"name": "storage_download", "description": "Download file from Cloud Storage", "example": "Download from GCS"},
        {"name": "functions_deploy", "description": "Deploy Cloud Function", "example": "Deploy function"},
        {"name": "functions_invoke", "description": "Invoke Cloud Function", "example": "Invoke function"}
      ],
      "requirements": {"corynth": ">=1.2.0"}
    },
    {
      "name": "json-processor",
      "version": "1.0.0",
      "description": "JSON parsing, manipulation, and validation",
      "author": "Corynth Team",
      "format": "built-in",
      "installation": "Automatically lazy-loaded when first used",
      "tags": ["json", "data", "parsing", "validation", "transform"],
      "actions": [
        {"name": "parse", "description": "Parse JSON string", "example": "Parse JSON to object"},
        {"name": "query", "description": "Query JSON data", "example": "Query with path"},
        {"name": "validate", "description": "Validate JSON structure", "example": "Validate JSON"},
        {"name": "transform", "description": "Transform JSON data", "example": "Apply transformations"}
      ],
      "requirements": {"corynth": ">=1.2.0"}
    }
  ],
  "categories": {
    "Core": ["git", "slack"],
    "Container & Orchestration": ["kubernetes", "helm", "docker"],
    "Cloud Providers": ["aws", "gcp"],
    "Database": ["redis", "mysql"],
    "Infrastructure": ["terraform", "vault"],
    "Network": ["http"],
    "System": ["shell", "file"],
    "Utilities": ["calculator", "json-processor"]
  },
  "featured": ["kubernetes", "helm", "aws", "gcp", "terraform", "docker"],
  "new": ["kubernetes", "helm", "aws", "gcp", "calculator", "json-processor"],
  "popular": ["kubernetes", "aws", "gcp", "docker", "terraform", "http"]
}